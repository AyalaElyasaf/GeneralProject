{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./recipe.service\";\nexport class StatisticService {\n  constructor(recipeService) {\n    this.recipeService = recipeService;\n    this.views = new BehaviorSubject(12);\n    this.loves = null;\n  }\n  ngOnInit() {\n    this.firstLovedFunc();\n  }\n  get views$() {\n    return this.views.asObservable();\n  }\n  firstLovedFunc() {\n    this.firstLoves = this.recipeService.firstLove();\n    this.loves = new BehaviorSubject(this.firstLoves);\n  }\n  get loves$() {\n    return this.loves.asObservable();\n  }\n  addViews() {\n    this.views.next(this.views.getValue() + 1);\n  }\n  addLove() {\n    this.loves.next(this.loves.getValue() + 1);\n  }\n  lessLove() {\n    this.loves.next(this.loves.getValue() - 1);\n  }\n  static #_ = this.ɵfac = function StatisticService_Factory(t) {\n    return new (t || StatisticService)(i0.ɵɵinject(i1.RecipeService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StatisticService,\n    factory: StatisticService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","StatisticService","constructor","recipeService","views","loves","ngOnInit","firstLovedFunc","views$","asObservable","firstLoves","firstLove","loves$","addViews","next","getValue","addLove","lessLove","_","i0","ɵɵinject","i1","RecipeService","_2","factory","ɵfac","providedIn"],"sources":["H:\\אנגולר\\GeneralProject\\src\\app\\Services\\statistic.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { RecipeService } from './recipe.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatisticService {\n\n  constructor(private recipeService: RecipeService) { \n    \n  }\nngOnInit() {\n  this.firstLovedFunc();\n}\n  views: BehaviorSubject<number> = new BehaviorSubject<number>(12);\n  get views$(): Observable<number> {\n    return this.views.asObservable();\n  }\n  firstLoves: number;\n  firstLovedFunc() {\n    this.firstLoves = this.recipeService.firstLove();\n    this.loves = new BehaviorSubject<number>(this.firstLoves);\n  }\n  loves: BehaviorSubject<number> = null\n  get loves$(): Observable<number> {\n    \n    return this.loves.asObservable();\n  }\n\n  addViews() {\n    this.views.next(this.views.getValue() + 1);\n  }\n  addLove() {\n    this.loves.next(this.loves.getValue() + 1);\n  }\n  lessLove() {\n    this.loves.next(this.loves.getValue() - 1);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;;AAMlD,OAAM,MAAOC,gBAAgB;EAE3BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAMjC,KAAAC,KAAK,GAA4B,IAAIJ,eAAe,CAAS,EAAE,CAAC;IAShE,KAAAK,KAAK,GAA4B,IAAI;EAbrC;EACFC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEE,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAI,CAACJ,KAAK,CAACK,YAAY,EAAE;EAClC;EAEAF,cAAcA,CAAA;IACZ,IAAI,CAACG,UAAU,GAAG,IAAI,CAACP,aAAa,CAACQ,SAAS,EAAE;IAChD,IAAI,CAACN,KAAK,GAAG,IAAIL,eAAe,CAAS,IAAI,CAACU,UAAU,CAAC;EAC3D;EAEA,IAAIE,MAAMA,CAAA;IAER,OAAO,IAAI,CAACP,KAAK,CAACI,YAAY,EAAE;EAClC;EAEAI,QAAQA,CAAA;IACN,IAAI,CAACT,KAAK,CAACU,IAAI,CAAC,IAAI,CAACV,KAAK,CAACW,QAAQ,EAAE,GAAG,CAAC,CAAC;EAC5C;EACAC,OAAOA,CAAA;IACL,IAAI,CAACX,KAAK,CAACS,IAAI,CAAC,IAAI,CAACT,KAAK,CAACU,QAAQ,EAAE,GAAG,CAAC,CAAC;EAC5C;EACAE,QAAQA,CAAA;IACN,IAAI,CAACZ,KAAK,CAACS,IAAI,CAAC,IAAI,CAACT,KAAK,CAACU,QAAQ,EAAE,GAAG,CAAC,CAAC;EAC5C;EAAC,QAAAG,CAAA,G;qBA/BUjB,gBAAgB,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBtB,gBAAgB;IAAAuB,OAAA,EAAhBvB,gBAAgB,CAAAwB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}