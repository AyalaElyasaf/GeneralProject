{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RecipeService {\n  constructor(httpSrv) {\n    this.httpSrv = httpSrv;\n    //#region אתחול רשימת מתכונים\n    this.recipes = [{\n      name: 'Chocolate balls',\n      ingrediens: ['biscuits', 'sugar', 'cocoa', 'vanila', 'oil', 'water', 'coconut', 'sprinkles'],\n      Instructions: ['crush the biscuits', 'heat the rest of the ingredients in a pot on the fire', 'add the biscuits', 'Make balls and decorate'],\n      Difficulty: 1.5\n    }, {\n      name: 'vegetable soup',\n      ingrediens: ['potatos', 'carrots', 'onions', 'garlic', 'oil', 'water', 'salt', 'black pepper', 'Seasoning for soup'],\n      Instructions: ['cut all the vegetables into squares', 'Put the cut vegetables in the pot and cover with water', 'After boiling, season the soup', 'Wait until the vegetables soften'],\n      Difficulty: 2.5\n    }, {\n      name: 'Belgian Waffles',\n      ingrediens: ['flour', 'suger', 'vanila', 'milk', 'oil', 'eggs', 'Baking powder'],\n      Instructions: ['mix all the ingrediens', 'put oil on the device', 'pour a full spoon each time', 'When ready to take out', 'Indulge in extras'],\n      Difficulty: 4.5\n    }];\n  }\n  getAllRecipes() {\n    return this.httpSrv.get(this.recipes.o);\n  }\n  showAllRecipe() {\n    return this.recipes;\n  }\n  addRecipe(recipe) {\n    this.recipes.push(recipe);\n  }\n  static #_ = this.ɵfac = function RecipeService_Factory(t) {\n    return new (t || RecipeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecipeService,\n    factory: RecipeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RecipeService","constructor","httpSrv","recipes","name","ingrediens","Instructions","Difficulty","getAllRecipes","get","o","showAllRecipe","addRecipe","recipe","push","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["H:\\אנגולר\\GeneralProject\\src\\app\\Services\\recipe.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Recipe } from '../Models/recipe';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  constructor(private httpSrv:HttpClient) { }\n\n  \n  getAllRecipes():Observable<Recipe[]>{\n   return this.httpSrv.get<Recipe[]>(this.recipes.o);\n  }\n  showAllRecipe() {\n    return this.recipes;\n  }\n\n  addRecipe(recipe: Recipe) {\n    this.recipes.push(recipe);\n  }\n//#region אתחול רשימת מתכונים\n  recipes: Recipe[] = [{\n    name:'Chocolate balls',\n    ingrediens: ['biscuits','sugar', 'cocoa', 'vanila', 'oil', 'water', 'coconut', 'sprinkles'],\n    Instructions: ['crush the biscuits',\n   'heat the rest of the ingredients in a pot on the fire' ,\n    'add the biscuits',\n    'Make balls and decorate'],\n    Difficulty: 1.5\n  },\n  {\n    name:'vegetable soup',\n    ingrediens: ['potatos','carrots', 'onions', 'garlic', 'oil', 'water', 'salt', 'black pepper','Seasoning for soup'],\n    Instructions: ['cut all the vegetables into squares',\n      'Put the cut vegetables in the pot and cover with water',\n      'After boiling, season the soup',\n      'Wait until the vegetables soften'],\n    Difficulty: 2.5\n  },\n  {\n    name:'Belgian Waffles',\n    ingrediens: ['flour','suger', 'vanila', 'milk', 'oil', 'eggs', 'Baking powder'],\n    Instructions: ['mix all the ingrediens',\n      'put oil on the device',\n      'pour a full spoon each time',\n      'When ready to take out',\n      'Indulge in extras'],\n    Difficulty: 4.5\n  }\n  ];\n  //#endregion\n\n\n}\n\n\n\n\n\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,OAAkB;IAAlB,KAAAA,OAAO,GAAPA,OAAO;IAa7B;IACE,KAAAC,OAAO,GAAa,CAAC;MACnBC,IAAI,EAAC,iBAAiB;MACtBC,UAAU,EAAE,CAAC,UAAU,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,CAAC;MAC3FC,YAAY,EAAE,CAAC,oBAAoB,EACpC,uDAAuD,EACtD,kBAAkB,EAClB,yBAAyB,CAAC;MAC1BC,UAAU,EAAE;KACb,EACD;MACEH,IAAI,EAAC,gBAAgB;MACrBC,UAAU,EAAE,CAAC,SAAS,EAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAC,oBAAoB,CAAC;MAClHC,YAAY,EAAE,CAAC,qCAAqC,EAClD,wDAAwD,EACxD,gCAAgC,EAChC,kCAAkC,CAAC;MACrCC,UAAU,EAAE;KACb,EACD;MACEH,IAAI,EAAC,iBAAiB;MACtBC,UAAU,EAAE,CAAC,OAAO,EAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,eAAe,CAAC;MAC/EC,YAAY,EAAE,CAAC,wBAAwB,EACrC,uBAAuB,EACvB,6BAA6B,EAC7B,wBAAwB,EACxB,mBAAmB,CAAC;MACtBC,UAAU,EAAE;KACb,CACA;EA1CyC;EAG1CC,aAAaA,CAAA;IACZ,OAAO,IAAI,CAACN,OAAO,CAACO,GAAG,CAAW,IAAI,CAACN,OAAO,CAACO,CAAC,CAAC;EAClD;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACR,OAAO;EACrB;EAEAS,SAASA,CAACC,MAAc;IACtB,IAAI,CAACV,OAAO,CAACW,IAAI,CAACD,MAAM,CAAC;EAC3B;EAAC,QAAAE,CAAA,G;qBAdUf,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbpB,aAAa;IAAAqB,OAAA,EAAbrB,aAAa,CAAAsB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}