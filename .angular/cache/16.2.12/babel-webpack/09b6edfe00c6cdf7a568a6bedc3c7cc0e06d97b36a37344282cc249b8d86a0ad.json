{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class RecipeService {\n  constructor() {\n    //#region אתחול רשימת מתכונים\n    this.recipes = new BehaviorSubject([{\n      name: 'Chocolate balls',\n      ingrediens: ['biscuits', 'sugar', 'cocoa', 'vanila', 'oil', 'water', 'coconut', 'sprinkles'],\n      Instructions: ['crush the biscuits', 'heat the rest of the ingredients in a pot on the fire', 'add the biscuits', 'Make balls and decorate'],\n      Difficulty: 1.5,\n      isFavorite: true\n    }, {\n      name: 'Vegetable soup',\n      ingrediens: ['potatos', 'carrots', 'onions', 'garlic', 'oil', 'water', 'salt', 'black pepper', 'Seasoning for soup'],\n      Instructions: ['cut all the vegetables into squares', 'Put the cut vegetables in the pot and cover with water', 'After boiling, season the soup', 'Wait until the vegetables soften'],\n      Difficulty: 2.5,\n      isFavorite: true\n    }, {\n      name: 'Belgian Waffles',\n      ingrediens: ['flour', 'suger', 'vanila', 'milk', 'oil', 'eggs', 'Baking powder'],\n      Instructions: ['mix all the ingrediens', 'put oil on the device', 'pour a full spoon each time', 'When ready to take out', 'Indulge in extras'],\n      Difficulty: 4.5,\n      isFavorite: false\n    }]);\n  }\n  get Recipes$() {\n    return this.recipes.asObservable();\n  }\n  AddRecipe(NewRecipe) {\n    const oldRecipes = this.recipes.getValue();\n    this.recipes.next([...oldRecipes, NewRecipe]);\n  }\n  DeleteRecipe(recipeToDelete) {\n    this.recipes.next(this.recipeSubject.getValue().filter(r => r !== recipeToDelete));\n  }\n  static #_ = this.ɵfac = function RecipeService_Factory(t) {\n    return new (t || RecipeService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecipeService,\n    factory: RecipeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","RecipeService","constructor","recipes","name","ingrediens","Instructions","Difficulty","isFavorite","Recipes$","asObservable","AddRecipe","NewRecipe","oldRecipes","getValue","next","DeleteRecipe","recipeToDelete","recipeSubject","filter","r","_","_2","factory","ɵfac","providedIn"],"sources":["H:\\אנגולר\\GeneralProject\\src\\app\\Services\\recipe.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Recipe } from '../Models/recipe';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipeService {\n\n  constructor() { }\n\n  get Recipes$(): Observable<Recipe[]> {\n    return this.recipes.asObservable();\n  }\n\n  AddRecipe(NewRecipe: Recipe):void{\n    const oldRecipes=this.recipes.getValue();\n    this.recipes.next([...oldRecipes,NewRecipe]);\n  }\n\n  \n  DeleteRecipe(recipeToDelete: Recipe):void{\n    this.recipes.next(this.recipeSubject.getValue().filter(r => (r!==recipeToDelete)));\n  }\n\n\n  \n//#region אתחול רשימת מתכונים\nprivate recipes:BehaviorSubject<Recipe[]>=new BehaviorSubject<Recipe[]>(\n  [{\n    name:'Chocolate balls',\n    ingrediens: ['biscuits','sugar', 'cocoa', 'vanila', 'oil', 'water', 'coconut', 'sprinkles'],\n    Instructions: ['crush the biscuits',\n   'heat the rest of the ingredients in a pot on the fire' ,\n    'add the biscuits',\n    'Make balls and decorate'],\n    Difficulty: 1.5,\n    isFavorite:true\n  },\n  {\n    name:'Vegetable soup',\n    ingrediens: ['potatos','carrots', 'onions', 'garlic', 'oil', 'water', 'salt', 'black pepper','Seasoning for soup'],\n    Instructions: ['cut all the vegetables into squares',\n      'Put the cut vegetables in the pot and cover with water',\n      'After boiling, season the soup',\n      'Wait until the vegetables soften'],\n    Difficulty: 2.5,\n    isFavorite:true\n  },\n  {\n    name:'Belgian Waffles',\n    ingrediens: ['flour','suger', 'vanila', 'milk', 'oil', 'eggs', 'Baking powder'],\n    Instructions: ['mix all the ingrediens',\n      'put oil on the device',\n      'pour a full spoon each time',\n      'When ready to take out',\n      'Indulge in extras'],\n    Difficulty: 4.5,\n    isFavorite:false\n  }\n]);\n  //#endregion\n\n\n}\n\n\n\n\n\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;AAMlD,OAAM,MAAOC,aAAa;EAExBC,YAAA;IAkBF;IACQ,KAAAC,OAAO,GAA2B,IAAIH,eAAe,CAC3D,CAAC;MACCI,IAAI,EAAC,iBAAiB;MACtBC,UAAU,EAAE,CAAC,UAAU,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,CAAC;MAC3FC,YAAY,EAAE,CAAC,oBAAoB,EACpC,uDAAuD,EACtD,kBAAkB,EAClB,yBAAyB,CAAC;MAC1BC,UAAU,EAAE,GAAG;MACfC,UAAU,EAAC;KACZ,EACD;MACEJ,IAAI,EAAC,gBAAgB;MACrBC,UAAU,EAAE,CAAC,SAAS,EAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,cAAc,EAAC,oBAAoB,CAAC;MAClHC,YAAY,EAAE,CAAC,qCAAqC,EAClD,wDAAwD,EACxD,gCAAgC,EAChC,kCAAkC,CAAC;MACrCC,UAAU,EAAE,GAAG;MACfC,UAAU,EAAC;KACZ,EACD;MACEJ,IAAI,EAAC,iBAAiB;MACtBC,UAAU,EAAE,CAAC,OAAO,EAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,eAAe,CAAC;MAC/EC,YAAY,EAAE,CAAC,wBAAwB,EACrC,uBAAuB,EACvB,6BAA6B,EAC7B,wBAAwB,EACxB,mBAAmB,CAAC;MACtBC,UAAU,EAAE,GAAG;MACfC,UAAU,EAAC;KACZ,CACF,CAAC;EAnDgB;EAEhB,IAAIC,QAAQA,CAAA;IACV,OAAO,IAAI,CAACN,OAAO,CAACO,YAAY,EAAE;EACpC;EAEAC,SAASA,CAACC,SAAiB;IACzB,MAAMC,UAAU,GAAC,IAAI,CAACV,OAAO,CAACW,QAAQ,EAAE;IACxC,IAAI,CAACX,OAAO,CAACY,IAAI,CAAC,CAAC,GAAGF,UAAU,EAACD,SAAS,CAAC,CAAC;EAC9C;EAGAI,YAAYA,CAACC,cAAsB;IACjC,IAAI,CAACd,OAAO,CAACY,IAAI,CAAC,IAAI,CAACG,aAAa,CAACJ,QAAQ,EAAE,CAACK,MAAM,CAACC,CAAC,IAAKA,CAAC,KAAGH,cAAe,CAAC,CAAC;EACpF;EAAC,QAAAI,CAAA,G;qBAhBUpB,aAAa;EAAA;EAAA,QAAAqB,EAAA,G;WAAbrB,aAAa;IAAAsB,OAAA,EAAbtB,aAAa,CAAAuB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}